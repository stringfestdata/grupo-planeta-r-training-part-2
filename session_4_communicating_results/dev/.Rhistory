read.csv("C:/RFiles/university.data")
write.csv(university, "C:/RFiles/university.csv")
university <- read.csv("C:/RFiles/university.data")
write.csv(university, "C:/RFiles/university.csv")
View(university)
install.packages("tidyverse", dependencies = TRUE)
library(stringr)
?str_split
head(university)
colnames(university) <- c("col")
university <- read.csv("C:/RFiles/university.data")
colnames(university) <- c("col")
head(university)
library(tidyverse)
View(university)
str_split(university$col, "(state")
library(tidyverse)
str_split(university$col, "(state")
str_split(university$col, "state")
View(x)
x <- str_split(university$col, "state")
View(x)
ecommerce <- read.csv("C:/RFiles/data.csv")
View(ecommerce)
library(Ecdat)
install.packages("Ecdat")
library(Ecdat)
library(Ecdat)
dim(Housing)
help('plot')
?plot
?plot
?plot
help(plott)
help(plot)
plot(Speed, Distance,
panel.first = lines(stats::lowess(Speed, Distance), lty = "dashed"),
pch = 0, cex = 1.2, col = "blue")
Speed <- cars$speed
Distance <- cars$dist
plot(Speed, Distance, panel.first = grid(8, 8),
pch = 0, cex = 1.2, col = "blue")
plot(Speed, Distance,
panel.first = lines(stats::lowess(Speed, Distance), lty = "dashed"),
pch = 0, cex = 1.2, col = "blue")
?qplot
?barplot
## 3rd form of formula - 2 categories :
op <- par(mfrow = 2:1, mgp = c(3,1,0)/2, mar = .1+c(3,3:1))
summary(d.Titanic <- as.data.frame(Titanic))
barplot(Freq ~ Class + Survived, data = d.Titanic,
subset = Age == "Adult" & Sex == "Male",
main = "barplot(Freq ~ Class + Survived, *)", ylab = "# {passengers}", legend = TRUE)
# Corresponding table :
(xt <- xtabs(Freq ~ Survived + Class + Sex, d.Titanic, subset = Age=="Adult"))
# Alternatively, a mosaic plot :
mosaicplot(xt[,,"Male"], main = "mosaicplot(Freq ~ Class + Survived, *)", color=TRUE)
par(op)
housing <- read.csv("C:/RFiles/housing.csv")
ecommerce <- read.csv("C:/Rfiles/ecommerce.csv")
?hist
?boxplot
?barplot
?plot
?hit
?hist
op <- par(mfrow = c(2, 2))
hist(islands)
utils::str(hist(islands, col = "gray", labels = TRUE))
?barplot
barplot(GNP ~ Year, data = longley)
barplot(cbind(Employed, Unemployed) ~ Year, data = longley)
## 3rd form of formula - 2 categories :
op <- par(mfrow = 2:1, mgp = c(3,1,0)/2, mar = .1+c(3,3:1))
summary(d.Titanic <- as.data.frame(Titanic))
barplot(Freq ~ Class + Survived, data = d.Titanic,
subset = Age == "Adult" & Sex == "Male",
main = "barplot(Freq ~ Class + Survived, *)", ylab = "# {passengers}", legend = TRUE)
# Corresponding table :
(xt <- xtabs(Freq ~ Survived + Class + Sex, d.Titanic, subset = Age=="Adult"))
# Alternatively, a mosaic plot :
mosaicplot(xt[,,"Male"], main = "mosaicplot(Freq ~ Class + Survived, *)", color=TRUE)
par(op)
# Formula method
barplot(GNP ~ Year, data = longley)
barplot(cbind(Employed, Unemployed) ~ Year, data = longley)
## 3rd form of formula - 2 categories :
op <- par(mfrow = 2:1, mgp = c(3,1,0)/2, mar = .1+c(3,3:1))
summary(d.Titanic <- as.data.frame(Titanic))
barplot(Freq ~ Class + Survived, data = d.Titanic,
subset = Age == "Adult" & Sex == "Male",
main = "barplot(Freq ~ Class + Survived, *)", ylab = "# {passengers}", legend = TRUE)
# Corresponding table :
(xt <- xtabs(Freq ~ Survived + Class + Sex, d.Titanic, subset = Age=="Adult"))
# Alternatively, a mosaic plot :
mosaicplot(xt[,,"Male"], main = "mosaicplot(Freq ~ Class + Survived, *)", color=TRUE)
par(op)
# Formula method
barplot(GNP ~ Year, data = longley)
barplot(cbind(Employed, Unemployed) ~ Year, data = longley)
## 3rd form of formula - 2 categories :
op <- par(mfrow = 2:1, mgp = c(3,1,0)/2, mar = .1+c(3,3:1))
summary(d.Titanic <- as.data.frame(Titanic))
barplot(Freq ~ Class + Survived, data = d.Titanic,
subset = Age == "Adult" & Sex == "Male",
main = "barplot(Freq ~ Class + Survived, *)", ylab = "# {passengers}", legend = TRUE)
# Corresponding table :
(xt <- xtabs(Freq ~ Survived + Class + Sex, d.Titanic, subset = Age=="Adult"))
# Alternatively, a mosaic plot :
mosaicplot(xt[,,"Male"], main = "mosaicplot(Freq ~ Class + Survived, *)", color=TRUE)
par(op)
library(Ecdat)
head(Housing)
head(Star)
install.packages("tidyverse")
a
library(tidyverse)
data(iris)
head(iris)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
Y
Y
data(package='Ecdat')
View(Fishing)
library(Ecdat)
View(Fishing)
View(Clothing)
View(Computers)
View(Fatality)
View(Males)
View(OFP)
View(Workinghours)
View(Wages)
head(Schooling)
source('~/GitHub/gh-advancing-into-analytics/drafts-in-progress/chapter-08-r-for-data-analysis/r-wrangling-dataviz-star.R', echo=TRUE)
head(ManufCost)
head(Fair)
head(Bwages)
head(Males)
head(Consumption)
head(Heating)
head(LaborSupply)
head(Produc)
data()
airquality
ToothGrowth
mtcars
sunspots
women
chickwts
cars
PlantGrowth
ability.cov
airmiles
attenu
# read the dataset into a data frame
abalone <- read.csv("http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data", header=FALSE)
# add column names
names(abalone) <- c("sex", "length", "diameter", "height", "weight.whole",
"weight.shucked", "weight.viscera", "weight.shell", "rings")
head(abalone)
library(rattle.data)
install.packages('rattle.data')
wine
library(rattle.data)
wine
head(abalone)
table(abalone$ringx)
table(abalone$rings)
hist(abalone$rings)
library(dplyr)
1 * 2
1 * 2 # This comment is possible
# This comment is preferred
2 * 1
# For reading in csv files
library(readr)
# For reading in Excel files
library(readxl)
# For summary statistics
library(psych)
# For reading in csv files
library(readr)
# For reading in Excel files
library(readxl)
# For summary statistics
library(psych)
# For importing and exploring data
library(tidyverse)
# For reading in Excel files
library(readxl)
# For summary statistics
library(psych)
# For importing and exploring data
library(tidyverse)
# For reading in Excel files
library(readxl)
# For summary statistics
library(psych)
# For importing and exploring data
library(tidyverse)
# For reading in Excel files
library(readxl)
# For summary statistics
library(psych)
?c
a <- 1
is.vector(a)
my_char <- 'Hello, world'
toupper(my_char)
is.vector(my_number)
my_number <- 8.2
sqrt(my_number)
is.vector(my_number)
my_numbers <- c(5, 8, 2, 7)
str(my_numbers)
typeof(my_numbers)
is.vector(my_numbers)
is.vector(my_numbers)
typeof(my_numbers)
length(my_number)
is.vector(my_numbers)
typeof(my_numbers)
length(my_numbers)
sqrt(my_numbers)
roster_names <- c('Jack', 'Jill', 'Billy', 'Susie', 'Johnny')
toupper(roster_names)
my_vec <- c('A', 2, 'C')
my_vec
typeof(my_vec)
my_vec <- c('A', 2, 'C')
my_vec
typeof(my_vec)
roster_names <- c('Jack', 'Jill', 'Billy', 'Susie', 'Johnny')
# Get third element of roster_names vector
roster_names[3]
# Get get first through third elements
roster_names[1:3]
length(roster_names)
# Get second through last elements
roster_names[2:length(roster_names)]
# Get second and fifth elements
roster_names[c(2, 4)]
# Get second and fifth elements
roster_names[c(2, 4)]
# Get second and fifth elements
roster_names[c(2, 4)]
# Get second and fifth elements
roster_names[c(2, 5)]
# Get second and fifth elements
roster_names[c(2, 5)]
# Get second and fifth elements
roster_names[c(2, 5)]
# Get second and fifth elements
roster_names[c(2, 5)]
# Get second and fifth elements
roster_names[c(2, 5)]
# View listing of available datasets
data()
airquality
ChickWeight
sunspots
Titanic
ToothGrowth
str(iris)
glimpse(iris)
dplyr;:glimpse(iris)
dplyr::glimpse(iris)
is.data.frame(iris)
install.packages('Lahman')
?Lahman
library(Lahman)
?Lahman
data(package = 'Lahman')
mtcars
data()
library(tidyverse)
getwd
getwd()
library(tidyverse)
mpg <- read_csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/master/mpg.csv')
mpg_split <- split(mpg, mpg$origin)
# Check the home directory for these files
ws_counter <- 1
for(ws in mpg_split){
write_csv(ws, file = paste0(names(mpg_split)[ws_counter],'.xlsx'))
ws_counter <- ws_counter + 1}
library(tidyverse)
mpg <- read_csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/master/mpg.csv')
mpg_split <- split(mpg, mpg$origin)
# Check the home directory for these files
ws_counter <- 1
for(ws in mpg_split){
write_csv(ws, file = paste0(names(mpg_split)[ws_counter],'.csv'))
ws_counter <- ws_counter + 1}
library(tidyverse)
mpg <- read_csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/master/mpg.csv')
mpg_split <- split(mpg, mpg$origin)
# Check the home directory for these files
ws_counter <- 1
for(ws in mpg_split){
write_csv(ws, paste0(names(mpg_split)[ws_counter],'.csv'))
ws_counter <- ws_counter + 1}
mpg %>%
nest(-origin) %>%
pwalk(~write_csv(x = .y, path = paste0(.x, ".csv") ) )
library(gapminder)
install.packages('gapminder')
library(gapminder)
gapminder %>%
nest(-country) %>%
pwalk(~write_csv(x = .y, path = paste0(.x, ".csv") ) )
mpg %>%
nest(-origin) %>%
pwalk(~write_csv(x = .y, path = paste0(.x, ".csv") ) )
?pwalk
?nest
?pwalk
options(width=80)
library(psych)
library(Ecdat)
describe(Housing)
library(psych)
library(Ecdat)
describe(Housing)
library(Ecdat)
names(Housing)
names(Housing)
names(Housing)
# Facet histogram
ggplot(data = Housing, aes(x = price)) +
geom_histogram()+
facet_wrap(~ airco)
library(tidyverse)
# Facet histogram
ggplot(data = Housing, aes(x = price)) +
geom_histogram()+
facet_wrap(~ airco)
# Facet histogram
ggplot(data = Housing, aes(x = price, fill = airco)) +
geom_histogram()
# Facet histogram
ggplot(data = Housing, aes(x = price, fill = airco)) +
geom_histogram() +
ggtitle("Distribution of homes with and without air conditioning")
# Facet histogram
ggplot(data = Housing, aes(x = price, fill = airco)) +
geom_histogram() +
ggtitle("Distribution of homes
with and without air conditioning")
# Facet histogram
ggplot(data = Housing, aes(x = price, fill = airco)) +
geom_histogram() +
ggtitle("Distribution of homes
with and without air conditioning")
library(psyych)
library(pysch)
library(pysch)
library(psych)
describeBy(Housing, group = 'airco')
Housing %>%
select(price, airco) %>%
describeBy(group = airco)
Housing %>%
select(price, airco) %>%
describeBy(group = 'airco')
homes_ac <- filter(Housing, airco = 'yes')
homes_no_ac <- filter(Housing, airco == 'no')
t.test(homes_ac$price, homes_no_ac$price)
homes_ac <- filter(Housing, airco == 'yes')
homes_no_ac <- filter(Housing, airco == 'no')
t.test(homes_ac$price, homes_no_ac$price)
homes_ac_price <- Housing %>%
filter(airco == 'yes') %>%
select(price)
homes_no_ac_price <- Housing %>%
filter(airco == 'no') %>%
select(price)
t.test(homes_ac_price, homes_no_ac_price)
library(Ecdat)
library(tidyverse)
library(psych)
# Price statistics by airco
Housing %>%
select(price, airco) %>%
describeBy(group = 'airco')
# Facet histogram
ggplot(data = Housing, aes(x = price, fill = airco)) +
geom_histogram() +
ggtitle("Distribution of homes
with and without air conditioning")
# T-test
homes_ac_price <- Housing %>%
filter(airco == 'yes') %>%
select(price)
homes_no_ac_price <- Housing %>%
filter(airco == 'no') %>%
select(price)
t.test(homes_ac_price, homes_no_ac_price)
# Price statistics by airco
Housing %>%
select(price, airco) %>%
describeBy(group = 'airco')
# Facet histogram
ggplot(data = Housing, aes(x = price, fill = airco)) +
geom_histogram() +
ggtitle("Distribution of homes
with and without air conditioning")
# T-test
homes_ac_price <- Housing %>%
filter(airco == 'yes') %>%
select(price)
homes_no_ac_price <- Housing %>%
filter(airco == 'no') %>%
select(price)
t.test(homes_ac_price, homes_no_ac_price)
library(tidyverse)
library(readxl)
library(psych)
library(sweep)
install.packages('sweep')
data(package = 'sweep')
View(bike_sales)
data(bike_sales)
bike_sales
data(bike_sales)
library(sweep)
data(bike_sales)
bike_sales
View(bike_sales)
library(reticulate)
library(Ecdat)
# import the packages we need
sns <- import('seaborn')
